<?xml version="1.0"?>

<project name="MonitoringAppWeb" default="build.war" basedir=".">
	
	<property file="build.properties" />
	
	<!-- Configure the context path for this application -->
	<property name="build.dir" value="${basedir}/build" />
	<property name="conf.dir" value="${basedir}/conf" />
	<property name="src.dir" value="${basedir}/src" />
	<property name="web.dir" value="${basedir}/WebRoot" />
	<property name="lib.dir" value="${web.dir}/WEB-INF/lib" />
	<property name="dist.dir" value="${basedir}/dist" />
	
	<path id="classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${basedir}/doc/javadoc" />
		<delete dir="${dist.dir}" />
	</target>

	<target name="prepare" description="Create build and javadoc directories.">
	
		<!-- replacement of ant.project.name to context.project.name  for setting dynamic value of war file name -->
		
		<mkdir dir="${build.dir}/${context.project.name}" />
		<mkdir dir="${build.dir}/${context.project.name}/WEB-INF" />
		<mkdir dir="${build.dir}/${context.project.name}/WEB-INF/classes" />
		<mkdir dir="${build.dir}/${context.project.name}/WEB-INF/lib" />
		
		<mkdir dir="${basedir}/doc/javadoc" />
		
	</target>

	<target name="deploy.copyJars">
		<copy todir="${build.dir}/${context.project.name}/WEB-INF/lib">
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
				<include name="**/*.dtd" />
				<!--These 2 jars will be there in app server path -->
				<exclude name="javax.servlet.jar" />
				<exclude name="javax.servlet.jsp.jar" />
			</fileset>
		</copy>
	</target>

	<!-- Executable Targets -->

	<target name="build" depends="prepare, deploy.copyJars" description="Compile Java files and copy static files.">

		<javac destdir="${build.dir}/${context.project.name}/WEB-INF/classes" debug="on" debuglevel="lines,vars,source">
            <src path="src"/>
           <!-- <src path="test"/> -->
			<include name="**/*.java" />
			<classpath refid="classpath" />
		</javac>


		<copy todir="${build.dir}/${context.project.name}/">
            <fileset dir="${web.dir}"/>
		</copy>

		<copy todir="${build.dir}/${context.project.name}/WEB-INF/classes">
			<fileset dir="${src.dir}">
				<include name="**/*.properties" />
				<include name="**/*.xml" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target name="build.war" depends="build">
		<mkdir dir="${dist.dir}" />
		
		<!-- create a war file for distribution -->
		<jar destfile="${dist.dir}/${context.project.name}.war" basedir="${build.dir}/${context.project.name}" />
	</target>

    /target>

    <target name="set.tomcatdeploy" >
		<taskdef name="deploy" classname="org.apache.catalina.ant.DeployTask" />
		<taskdef name="install" classname="org.apache.catalina.ant.InstallTask" />
		<taskdef name="list" classname="org.apache.catalina.ant.ListTask" />
		<taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask" />
		<taskdef name="remove" classname="org.apache.catalina.ant.RemoveTask" />
		<taskdef name="resources" classname="org.apache.catalina.ant.ResourcesTask" />
		<taskdef name="roles" classname="org.apache.catalina.ant.RolesTask" />
		<taskdef name="start" classname="org.apache.catalina.ant.StartTask" />
		<taskdef name="stop" classname="org.apache.catalina.ant.StopTask" />
		<taskdef name="undeploy" classname="org.apache.catalina.ant.UndeployTask" />
    </target>


	<target name="tomcat.deploy" depends="set.tomcatdeploy" >
		<echo message="Deploying ${context.project.name} to ${tomcat.manager.url} ..." />
		<deploy url="${tomcat.manager.url}"
		username="${tomcat.manager.username}"
		password="${tomcat.manager.password}"
		path="/${context.project.name}"
		war="file:${dist.dir}/${context.project.name}.war"
		update="true" />
	</target>

	<target name="tomcat.undeploy" depends="set.tomcatdeploy" >
		<echo message="Undeploying ${context.project.name} from ${tomcat.manager.url} ..." />
		<undeploy url="${tomcat.manager.url}"
		username="${tomcat.manager.username}"
		password="${tomcat.manager.password}"
		path="/${context.project.name}" />
	</target>



</project>

